# Generated by Django 4.2.3 on 2023-12-01 14:40

import datetime

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "last_login",
                    models.DateTimeField(blank=True, null=True, verbose_name="last login"),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(blank=True, max_length=150, verbose_name="first name"),
                ),
                (
                    "last_name",
                    models.CharField(blank=True, max_length=150, verbose_name="last name"),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active.\
                        Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(default=django.utils.timezone.now, verbose_name="date joined"),
                ),
                ("email", models.EmailField(max_length=255, unique=True)),
                ("password", models.CharField(max_length=255)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions \
                            granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Channel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=64)),
                ("description", models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name="Clip",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=64)),
                ("description", models.TextField(blank=True)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("SHORT", "Short"),
                            ("MEDIUM", "Medium"),
                            ("LONG", "Long"),
                        ],
                        max_length=6,
                    ),
                ),
                ("start_time", models.DurationField()),
                ("end_time", models.DurationField()),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="app_web.clip",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="GlossaryRelatedClips",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="GlossaryRelatedTerms",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Partner",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=64)),
                ("description", models.TextField()),
                ("logo", models.URLField()),
                ("link", models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name="Story",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=64)),
                ("short_description", models.TextField()),
                ("full_story", models.TextField()),
                ("video_url", models.URLField()),
            ],
            options={
                "verbose_name_plural": "stories",
            },
        ),
        migrations.CreateModel(
            name="Topic",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=64)),
                (
                    "abbreviation",
                    models.CharField(blank=True, max_length=16, null=True),
                ),
                ("description", models.TextField(blank=True)),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("LEGAL", "Legal"),
                            ("FINANCIAL", "Financial"),
                            ("CARE", "Care"),
                            ("MEDICAL", "Medical"),
                        ],
                        default="LEGAL",
                        max_length=9,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Video",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=64)),
                ("description", models.TextField(blank=True)),
                (
                    "streaming_service",
                    models.CharField(
                        choices=[("YOUTUBE", "YouTube"), ("VIMEO", "Vimeo")],
                        max_length=7,
                    ),
                ),
                ("video_id", models.CharField(max_length=32)),
                (
                    "channel",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="app_web.channel",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="GlossaryTerm",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("term", models.CharField(max_length=64)),
                ("definition", models.TextField()),
                ("source", models.URLField()),
                (
                    "related_clips",
                    models.ManyToManyField(through="app_web.GlossaryRelatedClips", to="app_web.clip"),
                ),
                (
                    "related_terms",
                    models.ManyToManyField(
                        through="app_web.GlossaryRelatedTerms",
                        to="app_web.glossaryterm",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="glossaryrelatedterms",
            name="original_term",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="app_web.glossaryterm",
            ),
        ),
        migrations.AddField(
            model_name="glossaryrelatedterms",
            name="related_term",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="related_term",
                to="app_web.glossaryterm",
            ),
        ),
        migrations.AddField(
            model_name="glossaryrelatedclips",
            name="glossary_term",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="app_web.glossaryterm",
            ),
        ),
        migrations.AddField(
            model_name="glossaryrelatedclips",
            name="related_clip",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="app_web.clip"),
        ),
        migrations.CreateModel(
            name="Field",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=64)),
                ("description", models.TextField(blank=True)),
                (
                    "topic",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="app_web.topic"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ClipReviewRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_issued", models.DateField(default=datetime.date.today)),
                ("curator_notes", models.TextField()),
                ("date_resolved", models.DateField(blank=True, null=True)),
                ("reviewer_notes", models.TextField(blank=True, null=True)),
                ("closed", models.BooleanField()),
                (
                    "clip",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="app_web.clip"),
                ),
                (
                    "curator",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="curator",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "reviewer",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="reviewer",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ClipAddressedTopic",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("pwd_relevance", models.FloatField()),
                ("caregiver_relevance", models.FloatField()),
                ("inspiration_score", models.FloatField()),
                ("information_score", models.FloatField()),
                (
                    "clip",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="app_web.clip"),
                ),
                (
                    "topic",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="app_web.topic"),
                ),
            ],
        ),
        migrations.AddField(
            model_name="clip",
            name="topics_addressed",
            field=models.ManyToManyField(through="app_web.ClipAddressedTopic", to="app_web.topic"),
        ),
        migrations.AddField(
            model_name="clip",
            name="video",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="app_web.video"),
        ),
    ]
