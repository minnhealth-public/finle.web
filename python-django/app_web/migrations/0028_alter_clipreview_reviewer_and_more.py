# Generated by Django 4.2.10 on 2024-04-24 18:57

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ("app_web", "0027_careteammember_notification_count"),
    ]

    operations = [
        migrations.AlterField(
            model_name="clipreview",
            name="reviewer",
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name="clipreviewrequest",
            name="requester",
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.RESTRICT, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.CreateModel(
            name="TaskReviewRequest",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("date_issued", models.DateField(default=datetime.date.today)),
                ("date_resolved", models.DateField(blank=True, null=True)),
                ("note", models.TextField(blank=True, null=True)),
                (
                    "requester",
                    models.ForeignKey(
                        null=True, on_delete=django.db.models.deletion.RESTRICT, to=settings.AUTH_USER_MODEL
                    ),
                ),
                ("task", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="app_web.task")),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="TaskReview",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("timestamp", models.DateTimeField(blank=True, null=True)),
                ("note", models.TextField(blank=True, null=True)),
                (
                    "request",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="request",
                        to="app_web.taskreviewrequest",
                    ),
                ),
                (
                    "reviewer",
                    models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to=settings.AUTH_USER_MODEL),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ResourceReviewRequest",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("date_issued", models.DateField(default=datetime.date.today)),
                ("date_resolved", models.DateField(blank=True, null=True)),
                ("note", models.TextField(blank=True, null=True)),
                (
                    "requester",
                    models.ForeignKey(
                        null=True, on_delete=django.db.models.deletion.RESTRICT, to=settings.AUTH_USER_MODEL
                    ),
                ),
                ("resource", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="app_web.resource")),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ResourceReview",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("timestamp", models.DateTimeField(blank=True, null=True)),
                ("note", models.TextField(blank=True, null=True)),
                (
                    "request",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="request",
                        to="app_web.resourcereviewrequest",
                    ),
                ),
                (
                    "reviewer",
                    models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to=settings.AUTH_USER_MODEL),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="GlossaryTermReviewRequest",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("date_issued", models.DateField(default=datetime.date.today)),
                ("date_resolved", models.DateField(blank=True, null=True)),
                ("note", models.TextField(blank=True, null=True)),
                (
                    "requester",
                    models.ForeignKey(
                        null=True, on_delete=django.db.models.deletion.RESTRICT, to=settings.AUTH_USER_MODEL
                    ),
                ),
                ("term", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="app_web.glossaryterm")),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="GlossaryTermReview",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("timestamp", models.DateTimeField(blank=True, null=True)),
                ("note", models.TextField(blank=True, null=True)),
                (
                    "request",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="request",
                        to="app_web.glossarytermreviewrequest",
                    ),
                ),
                (
                    "reviewer",
                    models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to=settings.AUTH_USER_MODEL),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
